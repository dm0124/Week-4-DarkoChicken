#Week 4: dplyr package

#Task: Write the code to get a dataset from Base R: ChickWeight
#and save it as a dataframe with a new name that includes your first name

ChickWeight #analyzing data
DarkoChickWeight <- as.data.frame(ChickWeight) #create dataframe

#See the top rows of the data
#TASK: Write the code to see the top rows of the data

head(DarkoChickWeight) 

#Install and call the package dplyr
#TASK: Write the code to install and call dplyr

install.packages("dplyr")
library("dplyr")
 
#Let's just see the weight and Time columns
#Task: Write the code to 'select' just the weight and Time columns 
#(hint: use the 'select' function)

select(DarkoChickWeight, weight, Time) #only weight and Time columns

#Let's name the dataset with just the two columns, weight and Time
#TASK: Write the code to save the two columns as a new dataframe
#and give it a new name

DarkoWeightTime <- data.frame(select(DarkoChickWeight, weight, Time)) #new dataframe with two columns

#Let's get rid of the Time column in the new dataframe created above
#TASK: Write the code that deselects the Time column
#(hint: use the 'select' function to not select a -column)

select(DarkoWeightTime, -Time) #drop a column from the dataset
DarkoWeight <- select(DarkoWeightTime, -Time) #

#Let's rename a column name
#TASK: Write the code that renames 'weight' to 'ounces'

DarkoWeight %>% rename(ounces = weight) #rename weight to ounces in dataframe, column still exist as weight
rename(DarkoWeight, ounces = weight) # another way 
#to remane permanently in existing set DarkoWeight <- rename(DarkoWeight, ounces = weight)

#Let's make a new dataframe with the new column name
#TASK: Write the code that names a new dataframe that includes the 'ounces' column

DarkoOunces <- rename(DarkoWeight, ounces = weight) #new dataframe with column name 'ounces'


#Let's 'filter' our dataframe to only those with a 1 in the Chick column
#TASK: Write the code that includes only rows where Chick = 1

filter(DarkoChickWeight, Chick==1) #filter only rows if Chick=1 from initial dataframe

#Let's 'group' our data by Diet
#TASK: Write the code to group the data by Diet (hint: group_by)

DarkoChickWeight %>% group_by(Diet) #group by Diet
group_by(DarkoChickWeight, Diet) #2 way to group
GroupDiet <- group_by(DarkoChickWeight, Diet) #create dataframe group by Diet
GroupDiet


#Task: add one of the other codes (not in the tasks above) 
#you learned about from the dplyr package

arrange(DarkoChickWeight, weight) #arrange date in ascending order by weight
DarkoChickWeight %>% mutate(weight_kg = weight * 0.45) #adding new column calculated weight in kg
DarkoChickWeight <- mutate(DarkoChickWeight, weight_kg = weight * 0.45) #add same column into existing dataframe
DarkoChickWeight %>% slice_sample(n = 10) #random select rows
DarkoChickWeight %>% relocate(weight_kg, .after=weight) #relocate column weight in kg after weight in lib

